@page "/login"
@using MetalFlow.Client.Data
@using MetalFlow.Client.Services
@inject MauiAuthenticationStateProvider AuthProvider
@inject NavigationManager NavManager

<MudPaper Class="pa-4" Elevation="3">
    <MudForm @ref="_form" @bind-IsValid="_success">
        <MudText Typo="Typo.h4" GutterBottom="true">Login</MudText>
        <MudTextField T="string" Label="Email" @bind-Value="_loginModel.Email" For="@(() => _loginModel.Email)" Required="true" RequiredError="Email is required!" />
        <MudTextField T="string" Label="Password" @bind-Value="_loginModel.Password" For="@(() => _loginModel.Password)" InputType="InputType.Password" Required="true" RequiredError="Password is required!" />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleLogin" Class="mt-4">Login</MudButton>
    </MudForm>
</MudPaper>

@code {
    private readonly LoginModel _loginModel = new();
    private MudForm _form;
    private bool _success;

    private async Task HandleLogin()
    {
        await _form.Validate();
        if (_success)
        {
            var result = await AuthProvider.LoginAsync(_loginModel);
            if (result)
            {
                NavManager.NavigateTo("/");
            }
            else
            {
                // Handle login failure (e.g., show a snackbar message)
            }
        }
    }
}